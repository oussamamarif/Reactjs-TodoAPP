{"version":3,"sources":["Components/Todoform.js","Components/checkbox.js","Components/Todoitems.js","Components/Todo.js","App.js","index.js"],"names":["Todoform","onSubmit","this","props","handleSubmit","className","type","placeholder","autoComplete","value","newTodo","onChange","handleChange","Component","CheckboxContainer","styled","div","Icon","svg","HiddenCheckbox","input","attrs","StyledCheckbox","size","checked","checkedColor","uncheckedColor","hoverColor","Checkbox","viewBox","points","Todoitems","todos","todoItem","map","todo","index","isCompleted","event","handleOnChange","style","textDecoration","title","onClick","handleOnedit","class","handleOnremove","id","length","Todo","state","setState","target","preventDefault","todoslength","toggleCompleted","todoCompleted","filter","removeTodo","splice","editTodo","prompt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAwBeA,E,4JApBX,WACI,OACI,8BACI,sBAAMC,SAAUC,KAAKC,MAAMC,aAA3B,SAEI,sBAAKC,UAAU,aAAf,UACA,mBAAGA,UAAU,uBAEb,uBAAOC,KAAK,OAAOC,YAAY,aAAaC,aAAa,MACzDC,MAAOP,KAAKC,MAAMO,QAClBC,SAAUT,KAAKC,MAAMS,0B,GAXlBC,a,qCCAjBC,EAAoBC,IAAOC,IAAV,iFAKjBC,EAAOF,IAAOG,IAAV,0LAWJC,EAAiBJ,IAAOK,MAAMC,MAAM,CAAEf,KAAM,YAA3BS,CAAH,iWAedO,EAAiBP,IAAOC,IAAV,6QAGT,SAAAb,GAAK,OAAIA,EAAMoB,KAAO,QACrB,SAAApB,GAAK,OAAIA,EAAMoB,KAAO,QAClB,SAAApB,GAAK,OACjBA,EAAMqB,QAAUrB,EAAMsB,aAAetB,EAAMuB,iBAG3CP,GACwB,SAAAhB,GAAK,OAAIA,EAAMwB,aAEvCV,GACc,SAAAd,GAAK,OAAKA,EAAMqB,QAAU,UAAY,YAezCI,EAXE,SAAC,GAAD,IAAGvB,EAAH,EAAGA,UAAWmB,EAAd,EAAcA,QAAYrB,EAA1B,8CACf,eAACW,EAAD,CAAmBT,UAAWA,EAA9B,UACE,cAACc,EAAD,aAAgBK,QAASA,GAAarB,IACtC,cAACmB,EAAD,yBAAgBE,QAASA,GAAarB,GAAtC,aACE,cAACc,EAAD,CAAMY,QAAQ,YAAd,SACE,0BAAUC,OAAO,4BCHVC,EAlDG,SAAC5B,GAAW,IACnB6B,EAAS7B,EAAT6B,MACDC,EAAWD,EAAME,KAAI,SAACC,EAAKC,GAC7B,OACI,sBAAmB/B,UAAU,oCAA7B,UACK,qBAAKA,UAAU,eAAf,SACI,gCACI,cAAC,EAAD,CACGA,UAAU,mBACVmB,QAASW,EAAKE,YACdd,KAAM,GACNE,aAAa,UACbC,eAAe,UACfC,WAAW,UACXhB,SAAU,SAAA2B,GAAK,OAAInC,EAAMoC,eAAeD,EACpCF,UAIhB,sBAAK/B,UAAU,iEAAf,UACI,qBAAKA,UAAU,YAAf,SACI,sBAAMmC,MAAO,CAACC,eAAgBN,EAAKE,YAAc,eAAiB,QAAlE,SAEKF,EAAKO,UAGd,gCACA,mBAAGC,QAAS,kBAAMxC,EAAMyC,aAAaR,IAAQS,MAAM,iBAEnD,mBAAGF,QAAS,kBAAMxC,EAAM2C,eAAeV,IAAQ/B,UAAU,wBAzBvD8B,EAAKY,OAgCvB,OACI,sBAAK1C,UAAU,uBAAf,UACY,uBACiB,IAAhB2B,EAAMgB,QACH,oBAAI3C,UAAU,UAAd,gCAEH2B,EAAMgB,OAAS,GACbf,MC4CPgB,E,4MAjFdC,MAAQ,CACNlB,MAAQ,GACRtB,QAAS,I,EAEXE,aAAe,SAAA0B,GACb,EAAKa,SAAS,CAACzC,QAAU4B,EAAMc,OAAO3C,S,EAExCL,aAAe,SAAAkC,GACbA,EAAMe,iBACN,IAAIC,EAAc,EAAKJ,MAAMlB,MAAMgB,OACT,KAAvB,EAAKE,MAAMxC,SAGd,EAAKyC,SAAS,CACZzC,QAAQ,GACRsB,MAAM,GAAD,mBACA,EAAKkB,MAAMlB,OADX,CAEH,CACEe,GAAIO,GAAe,EACnBZ,MAAQ,EAAKQ,MAAMxC,QACnB2B,aAAa,Q,EAKtBkB,gBAAkB,SAACjB,EAAMF,GACvB,IAAMoB,EAAe,EAAKN,MAAMlB,MAAMyB,QAAO,SAAAtB,GAI3C,OAHIA,EAAKY,KAAOX,EAAQ,IACtBD,EAAKE,YAAcC,EAAMc,OAAO5B,SAE3BW,KAER,EAAKgB,SAAS,CACZnB,MAAMwB,K,EAGVE,WAAY,SAAEtB,GAAY,IAChBJ,EAAU,EAAKkB,MAAflB,MACRA,EAAM2B,OAAOvB,EAAO,GACpB,EAAKe,SAAS,CACZnB,W,EAIJ4B,SAAW,SAACxB,GACV,IAAM1B,EAAUmD,OAAO,oBAChB7B,EAAS,EAAKkB,MAAdlB,MACPA,EAAMyB,QAAO,SAAAtB,GAKX,OAJGA,EAAKY,KAAOX,EAAQ,IACrBD,EAAKO,MAAMhC,GAGNyB,KAET,EAAKgB,SAAS,CACZnB,W,4CAIJ,WACE,OACE,sBAAK3B,UAAU,mDAAf,UAEK,cAAC,EAAD,CAAU2B,MAAO9B,KAAKgD,MAAMlB,MAC5BtB,QAASR,KAAKgD,MAAMxC,QACpBE,aAAcV,KAAKU,aACnBR,aAAcF,KAAKE,eAGtB,cAAC,EAAD,CAAW4B,MAAO9B,KAAKgD,MAAMlB,MAC7BO,eAAgBrC,KAAKqD,gBACrBT,eAAgB5C,KAAKwD,WACrBd,aAAc1C,KAAK0D,kB,GAzER/C,aCOJiD,MAVf,WACE,OACE,qBAAKzD,UAAU,MAAf,SACE,cAAC,EAAD,OCDN0D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.75997974.chunk.js","sourcesContent":["import './todoform.css';\r\nimport React, { Component } from 'react';\r\n\r\nclass Todoform extends Component{ \r\n    render() {\r\n        return ( \r\n            <div>\r\n                <form onSubmit={this.props.handleSubmit}>\r\n    \r\n                    <div className=\"input-icon\">\r\n                    <i className=\"fa fa-list-ol icon\"></i>\r\n    \r\n                    <input type=\"text\" placeholder=\"Add a task\" autoComplete=\"off\" \r\n                    value={this.props.newTodo}\r\n                    onChange={this.props.handleChange}></input>\r\n                    </div>\r\n    \r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n  \r\n}\r\n \r\nexport default Todoform;","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`\r\n\r\nconst Icon = styled.svg`\r\n  fill: none;\r\n  stroke: white;\r\n  stroke-width: 2px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 15px;\r\n`\r\n\r\nconst HiddenCheckbox = styled.input.attrs({ type: \"checkbox\" })`\r\n  // Hide checkbox visually but remain accessible to screen readers.\r\n  // Source: https://polished.js.org/docs/#hidevisually\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 100px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 100px;\r\n`\r\n\r\nconst StyledCheckbox = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${props => props.size + \"px\"};\r\n  height: ${props => props.size + \"px\"};\r\n  background: ${props =>\r\n    props.checked ? props.checkedColor : props.uncheckedColor};\r\n  border-radius: 3px;\r\n  transition: all 150ms;\r\n  ${HiddenCheckbox}:focus + & {\r\n    box-shadow: 0 0 0 3px ${props => props.hoverColor};\r\n  }\r\n  ${Icon} {\r\n    visibility: ${props => (props.checked ? \"visible\" : \"hidden\")};\r\n  }\r\n`\r\n\r\nconst Checkbox = ({ className, checked, ...props }) => (\r\n  <CheckboxContainer className={className}>\r\n    <HiddenCheckbox checked={checked} {...props} />\r\n    <StyledCheckbox checked={checked} {...props}>\r\n      <Icon viewBox=\"0 0 24 24\">\r\n        <polyline points=\"20 6 9 17 4 12\" />\r\n      </Icon>\r\n    </StyledCheckbox>\r\n  </CheckboxContainer>\r\n)\r\n\r\nexport default Checkbox","import './todoitems.css';\r\nimport Checkbox from './checkbox'\r\n\r\nconst Todoitems = (props) => {\r\n    const {todos} = props;\r\n    const todoItem = todos.map((todo,index) =>{\r\n        return (\r\n            <div key={todo.id} className=\"todoComponent d-flex w-75 mx-auto\">\r\n                 <div className=\"todoCompLeft\">\r\n                     <label>\r\n                         <Checkbox \r\n                            className=\"checkbox-element\"\r\n                            checked={todo.isCompleted}\r\n                            size={20}\r\n                            checkedColor=\"#2e3238\"\r\n                            uncheckedColor=\"#2e3238\"\r\n                            hoverColor=\"#343a40\"\r\n                            onChange={event => props.handleOnChange(event,\r\n                                index)}\r\n                         />\r\n                     </label>\r\n                 </div>\r\n                <div className=\"todoCompRight d-flex justify-content-between flex-grow-1 px-3 \">\r\n                    <div className=\"todoTitle\">\r\n                        <span style={{textDecoration: todo.isCompleted ? \"line-through\" : \"none\"}\r\n                    }>\r\n                            {todo.title}\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                    <i onClick={() => props.handleOnedit(index)} class=\"fa fa-pencil\"></i>\r\n                    \r\n                    <i onClick={() => props.handleOnremove(index)} className=\"fa fa-trash\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n              \r\n            )\r\n    })\r\n    return (  \r\n        <div className=\"todoListItems w-full\">\r\n                    <hr />\r\n                    {todos.length ===0 &&(\r\n                        <h3 className=\"noTodos\"> Let's Do somework</h3>\r\n                    )}\r\n                    {todos.length > 0 && \r\n                       todoItem\r\n                   }\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Todoitems;","import './todo.css';\r\nimport React, { Component } from 'react';\r\nimport Todoform from './Todoform'\r\nimport Todoitems from \"./Todoitems\"\r\n\r\n\r\n\r\n\r\nclass Todo extends Component{ \r\n  state = {\r\n    todos : [],\r\n    newTodo: ''\r\n  }\r\n  handleChange = event => {\r\n    this.setState({newTodo : event.target.value})\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    let todoslength = this.state.todos.length \r\n    if(this.state.newTodo === \"\"){\r\n      return;\r\n    }\r\n    this.setState({\r\n      newTodo:'',\r\n      todos: [\r\n        ...this.state.todos,\r\n        {\r\n          id:(todoslength += 1 ),\r\n          title : this.state.newTodo,\r\n          isCompleted: false\r\n        }]\r\n      \r\n    })\r\n  }\r\n toggleCompleted = (event,index) =>{\r\n   const todoCompleted =this.state.todos.filter(todo=>{\r\n     if (todo.id === index + 1){\r\n       todo.isCompleted = event.target.checked\r\n     }\r\n     return todo;\r\n   })\r\n    this.setState({\r\n      todos:todoCompleted\r\n    })\r\n  }\r\n  removeTodo =( index ) => {\r\n    const { todos } = this.state ;\r\n    todos.splice(index, 1);\r\n    this.setState({\r\n      todos,\r\n    });\r\n\r\n  }\r\n  editTodo = (index) => {\r\n    const newTodo = prompt('Enter a new task');\r\n    const{ todos} = this.state;\r\n    todos.filter(todo => {\r\n      if(todo.id === index + 1){\r\n        todo.title=newTodo ;\r\n\r\n      }\r\n      return todo \r\n    });\r\n    this.setState({\r\n      todos\r\n    })\r\n\r\n  }\r\n  render(){\r\n    return ( \r\n      <div className=\"todo-list container d-flex-column w-50 mt-5 pb-3\"\r\n       >\r\n           <Todoform todos={this.state.todos}\r\n           newTodo={this.state.newTodo} \r\n           handleChange={this.handleChange}\r\n           handleSubmit={this.handleSubmit}/>\r\n        \r\n\r\n        <Todoitems todos={this.state.todos}  \r\n        handleOnChange={this.toggleCompleted}\r\n        handleOnremove={this.removeTodo}\r\n        handleOnedit={this.editTodo}\r\n       />\r\n      </div>\r\n    );\r\n\r\n  }\r\n     \r\n }\r\n  \r\n export default Todo;\r\n\r\n\r\n","\nimport './App.css';\n\nimport Todo from './Components/Todo'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo/>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}